(()=>{"use strict";var e=function(e,t,n=null,o=null,i=!0){const l={method:e};let a={};return i&&(a.Authorization="Bearer "+localStorage.getItem("access_token")),n?(l.body=JSON.stringify(n),a["Content-Type"]="application/json"):o&&(l.body=o),l.headers=new Headers(a),fetch(t,l)},t=function(){let t=API_URL;return{getProjects:function(n,o,i,l){return e("GET",`${t}/projects/?skip=${n}&limit=${o}&orderby=${i}&orderdir=${l}`,null,null,!0)},getProject:function(n){return e("GET",`${t}/project/${n}`,null,null,!0)},deleteProject:function(n){return e("DELETE",`${t}/project/${n}`,null,null,!0)},createProject:function(n){return e("POST",`${t}/projects/`,n,null,!0)},updateProject:function(n,o){return e("PUT",`${t}/project/${n}`,o,null,!0)},getAnnotationIds:function(){return e("GET",`${t}/annotation_ids/`,null,null,!0)},exportProject:function(n){return e("GET",`${t}/export/${n}`,null,null,!0)},importProject:function(n){return e("POST",`${t}/import/`,null,n,!0)},getImages:function(n){return e("GET",`${t}/project/${n}/images/`,null,null,!0)},getImageFile:function(n){return e("GET",`${t}/image_file/${n}`,null,null,!0)},createImages:function(n,o){return e("POST",`${t}/project/${n}/images/`,null,o,!0)},deleteImage:function(n){return e("DELETE",`${t}/image/${n}`,null,null,!0)},getAnnotation:function(n){return e("GET",`${t}/annotation/${n}`,null,null,!0)},updateAnnotation:function(n,o){return e("PUT",`${t}/annotation/${n}`,o,null,!0)},createUser:function(n){return e("POST",`${t}/users/`,n,null,!1)},loginUser:function(n){return e("POST",`${t}/token`,null,n,!1)},isValid:function(n){return e("GET",`${t}/isvalid/${n}`,null,null,!1)}}}();function n(){window.location.href=FRONTEND_URLS.login}function o(){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16)))}function i(e,t){t.detail.forEach((t=>{const n=t.loc[1];console.log(n),e[n].helperTextContent=t.msg,e[n].valid=!1}))}!async function(e){await async function(){const e=localStorage.getItem("access_token");if(!e)return!1;var n=await t.isValid(e);if(200==n.status)return(await n.json()).isvalid;throw new Error("Failed to determine whether user is logged in")}()?async function(e,l){const a="Project saved successfully.",c="Failed to save project.",r={name:new mdc.textField.MDCTextField(document.querySelector("#text-field-name")),description:new mdc.textField.MDCTextField(document.querySelector("#text-field-description"))},s=new mdc.snackbar.MDCSnackbar(document.querySelector(".mdc-snackbar"));var u=[],d={},m=[];async function f(e){var o=await t.getProject(e);if(200==o.status){const e=await o.json();["name","description","images"].every((t=>Object.keys(e).includes(t)))&&(E(e.name),y(e.description),_(e.images))}else{if(401!=o.status)throw new Error(`Failed to get data for project with id ${e}`);n()}}async function g(){if(m.length){console.log("Deleting: "+m);var e=await Promise.all(m.map((async e=>await t.deleteImage(e))));if(e.every((e=>200==e.status)))console.log(a),s.labelText=a,s.open(),h();else{if(!e.some((e=>401==e.status)))throw console.log(c),s.labelText=c,s.open(),new Error("Failed to delete images");n()}}else console.log(a),s.labelText=a,s.open(),h()}async function p(e,o){if(o.has("files")){var i=await t.createImages(e,o);if(201==i.status)g();else{if(401!=i.status)throw console.log(c),s.labelText=c,s.open(),new Error("Failed to create images");n()}}else g()}async function w(e,o){var l=await t.createProject(e);if(201==l.status)p((await l.json()).id,o);else if(422==l.status){const e=await l.json();i(r,e)}else{if(401!=l.status)throw console.log(c),s.labelText=c,s.open(),new Error("Failed to create project");n()}}async function b(e,o,l){var a=await t.updateProject(e,o);if(200==a.status)p(e,l);else if(422==a.status){const e=await a.json();i(r,e)}else{if(401!=a.status)throw console.log(c),s.labelText=c,s.open(),new Error(`Failed to update project with id ${e}`);n()}}function v(e){null!=e&&f(e)}function E(e){r.name.value=e,document.getElementById("text-field-name").classList.add("mdc-text-field--label-floating"),document.getElementById("text-field-name-label").classList.add("mdc-floating-label--float-above")}function y(e){r.description.value=e,e.length&&(document.getElementById("text-field-description").classList.add("mdc-text-field--label-floating"),document.getElementById("text-field-description-label").classList.add("mdc-floating-label--float-above"))}function $(e,t,n,o){const i=`\n            <div class="image-list__item">\n                <div class="mdc-elevation--z2">\n                    <img class="image-list-image__${o}" src="${n}">\n                    <div class="image-list-image__delete-button">\n                        <button class="mdc-icon-button material-icons" id="image-list-image-${e}" aria-describedby="tooltip-delete-image">\n                            <div class="mdc-icon-button__ripple"></div>\n                            <span class="mdc-icon-button__focus-ring"></span>\n                            <i class="material-icons mdc-icon-button__icon mdc-icon-button__icon--on">delete</i>\n                            <i class="material-icons mdc-icon-button__icon">delete_outline</i>\n                        </button>\n                    </div>\n                </div>\n            </div>`;document.getElementById("images-list").appendChild(function(e){var t=document.createElement("template");return t.innerHTML=e,t.content}(i)),document.getElementById(`image-list-image-${e}`).addEventListener("click",x.bind(event,e,t),!1)}function j(e){document.getElementById("image-list-title").style.display=e?"block":"none"}function _(e){j(e.length>0),document.getElementById("images-list"),e.forEach((e=>{(async function(e){var o=await t.getImageFile(e);if(200==o.status){const e=await o.blob();return URL.createObjectURL(e)}if(401!=o.status)throw new Error(`Failed to get image file with id ${e}`);n()})(e.id).then((t=>{$(e.id,!0,t,"image-already-uploaded")}))}))}function h(){window.location.href=FRONTEND_URLS.projects}function T(){const t={name:document.getElementById("text-field-name-input").value,description:document.getElementById("text-field-description-input").value};var n=new FormData;for(const[e,t]of Object.entries(d))u.includes(e)&&n.append("files",t,t.name);"add"==l?w(t,n):"edit"==l?b(e,t,n):console.log("Unknown mode. Must be either 'add' or 'edit'.")}function I(){h()}function L(e){function t(e){return window.URL?window.URL.createObjectURL(e):window.webkitURL.createObjectURL(e)}if(e.target.files.length){for(var n=0;n<e.target.files.length;n++){const i=e.target.files[n],l=o();d[l]=i,u.push(l),$(l,!1,`${t(i)}`,"image-not-uploaded")}j(!0)}}function x(e,t){event.currentTarget.classList.contains("mdc-icon-button--on")?(event.currentTarget.classList.remove("mdc-icon-button--on"),t?m=m.filter((function(t){return t!==e})):u.push(e)):(event.currentTarget.classList.add("mdc-icon-button--on"),t?m.push(e):u=u.filter((function(t){return t!==e}))),console.log("image_ids_to_delete: "+m),console.log("image_ids_to_upload: "+u),console.log("image_files_to_upload: "+d)}document.getElementById("image-upload-input").addEventListener("input",L),document.getElementById("edit-project-cancel-button").addEventListener("click",I),document.getElementById("edit-project-submit-button").addEventListener("click",T),v(e)}(project_id,mode):n()}()})();