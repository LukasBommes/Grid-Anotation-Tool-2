/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/add_edit_project.js":
/*!*********************************!*\
  !*** ./src/add_edit_project.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addEditProject\": () => (/* binding */ addEditProject)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./src/api.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n\n\n\n// TODOS:\n// - images list pagination\n// - button to select all images for deletion\n// - show checkmark on already annotated images\n// - catch errors of XHR requests (show snackbar with generic error message and full error message in console)\n// - enable a detail-view of the image\n// - show snackbar when redirecting to projects page\n\n(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.entrypoint)(() => {\n    addEditProject(project_id, mode);\n});\n\nasync function addEditProject(project_id, mode) {\n\n    const project_save_success_msg = \"Project saved successfully.\";\n    const project_save_error_msg = \"Failed to save project.\"\n\n    const textFieldsProject = {\n        name: new mdc.textField.MDCTextField(document.querySelector('#text-field-name')),\n        description: new mdc.textField.MDCTextField(document.querySelector('#text-field-description'))\n    }\n\n    const snackbar = new mdc.snackbar.MDCSnackbar(document.querySelector('.mdc-snackbar'));\n\n    var image_ids_to_upload = [];\n    var image_files_to_upload = {};\n    var image_ids_to_delete = [];\n\n    document.getElementById(\"image-upload-input\").addEventListener('input', filesInputChanged);\n    document.getElementById(\"edit-project-cancel-button\").addEventListener('click', cancelButtonClicked);\n    document.getElementById(\"edit-project-submit-button\").addEventListener('click', saveProjectButtonClicked);\n\n    getProjectDataAndPopulateFields(project_id);\n\n    async function getProject(project_id) {\n        var response = await _api_js__WEBPACK_IMPORTED_MODULE_0__.apiService.getProject(project_id);\n\n        if (response.status == 200) {\n            const data = await response.json();\n            var neededKeys = ['name', 'description', 'images'];\n            if (neededKeys.every(key => Object.keys(data).includes(key))) {\n                setName(data.name);\n                setDescription(data.description);\n                setImagesList(data.images);\n            }\n        } else if (response.status == 401) {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.redirectToLogin)();\n        }\n        else {\n            throw new Error(`Failed to get data for project with id ${project_id}`);\n        }\n    }\n\n    async function deleteImages() {\n        if (image_ids_to_delete.length) {\n            console.log(\"Deleting: \"+image_ids_to_delete);\n            var responses = await Promise.all(image_ids_to_delete.map(async (image_id) => {\n                    return await _api_js__WEBPACK_IMPORTED_MODULE_0__.apiService.deleteImage(image_id);\n                }\n            ));\n\n            if(responses.every(e => e.status == 200)) {\n                // all requests okay\n                console.log(project_save_success_msg); \n                snackbar.labelText = project_save_success_msg;\n                snackbar.open();\n                redirectHome();\n            } else if(responses.some(e => e.status == 401)) {\n                // at least one request failed with 401 unauthorized access\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.redirectToLogin)();\n            } else {\n                // at least one request failed\n                console.log(project_save_error_msg); \n                snackbar.labelText = project_save_error_msg;    \n                snackbar.open();\n                throw new Error(`Failed to delete images`); \n            }\n\n        } else {\n            console.log(project_save_success_msg); \n            snackbar.labelText = project_save_success_msg;\n            snackbar.open();\n            redirectHome();\n        }\n    }\n\n    async function createImages(project_id, images_data) {\n        if (images_data.has(\"files\")) {\n            var response = await _api_js__WEBPACK_IMPORTED_MODULE_0__.apiService.createImages(project_id, images_data);\n\n            if (response.status == 201) {\n                deleteImages();  // delete images marked for deletion\n            } else if (response.status == 401) {\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.redirectToLogin)();\n            } else {\n                console.log(project_save_error_msg); \n                snackbar.labelText = project_save_error_msg;    \n                snackbar.open();\n                throw new Error(`Failed to create images`);\n            }\n        } else {\n            deleteImages();\n        }\n    }\n\n    async function createProject(project_data, images_data) {\n        var response = await _api_js__WEBPACK_IMPORTED_MODULE_0__.apiService.createProject(project_data);\n\n        if (response.status == 201) {\n            const data = await response.json();\n            const project_id_new = data.id;\n            createImages(project_id_new, images_data);\n        } else if (response.status == 422) {\n            const errors = await response.json();\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.parseValidationErrors)(textFieldsProject, errors);\n        } else if (response.status == 401) {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.redirectToLogin)();\n        } else {\n            console.log(project_save_error_msg); \n            snackbar.labelText = project_save_error_msg;    \n            snackbar.open();\n            throw new Error(`Failed to create project`);\n        }\n    }\n\n    async function updateProject(project_id, project_data, images_data) {\n        var response = await _api_js__WEBPACK_IMPORTED_MODULE_0__.apiService.updateProject(project_id, project_data);\n\n        if (response.status == 200) {\n            createImages(project_id, images_data);\n        } else if (response.status == 422) {\n            const errors = await response.json();\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.parseValidationErrors)(textFieldsProject, errors);\n        } else if (response.status == 401) {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.redirectToLogin)();\n        } else {\n            console.log(project_save_error_msg); \n            snackbar.labelText = project_save_error_msg;    \n            snackbar.open();\n            throw new Error(`Failed to update project with id ${project_id}`);\n        }\n    }\n\n    function getProjectDataAndPopulateFields(project_id) {\n        if (project_id == null) {\n            return;\n        }\n        getProject(project_id);        \n    }\n\n    function setName(name) {\n        textFieldsProject[\"name\"].value = name;\n        document.getElementById('text-field-name').classList.add(\"mdc-text-field--label-floating\");\n        document.getElementById('text-field-name-label').classList.add(\"mdc-floating-label--float-above\");\n    }\n\n    function setDescription(description) {\n        textFieldsProject[\"description\"].value = description;\n        if (description.length) {\n            document.getElementById('text-field-description').classList.add(\"mdc-text-field--label-floating\");\n            document.getElementById('text-field-description-label').classList.add(\"mdc-floating-label--float-above\");\n        }\n    }\n\n    function addImageToImageList(image_id, is_uploaded, src, classsuffix) {\n        const html = `\n            <div class=\"image-list__item\">\n                <div class=\"mdc-elevation--z2\">\n                    <img class=\"image-list-image__${classsuffix}\" src=\"${src}\">\n                    <div class=\"image-list-image__delete-button\">\n                        <button class=\"mdc-icon-button material-icons\" id=\"image-list-image-${image_id}\" aria-describedby=\"tooltip-delete-image\">\n                            <div class=\"mdc-icon-button__ripple\"></div>\n                            <span class=\"mdc-icon-button__focus-ring\"></span>\n                            <i class=\"material-icons mdc-icon-button__icon mdc-icon-button__icon--on\">delete</i>\n                            <i class=\"material-icons mdc-icon-button__icon\">delete_outline</i>\n                        </button>\n                    </div>\n                </div>\n            </div>`;\n        document.getElementById('images-list').appendChild((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.htmlToElements)(html));\n        document.getElementById(`image-list-image-${image_id}`).addEventListener('click', deleteImageButtonClicked.bind(event, image_id, is_uploaded), false)\n    }\n\n    function updateImageListTitle(show) {\n        if (show) {\n            document.getElementById('image-list-title').style.display = \"block\";\n        } else {\n            document.getElementById('image-list-title').style.display = \"none\";\n        }\n    }\n\n    function setImagesList(images) {\n        updateImageListTitle(images.length > 0);\n        const imagesList = document.getElementById('images-list');\n        images.forEach((image) => {\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getImageUrl)(image.id).then(imageURL => {\n                addImageToImageList(image.id, true, imageURL, \"image-already-uploaded\");\n            });\n        });\n    }\n\n    function redirectHome() {\n        window.location.href = FRONTEND_URLS.projects;\n    }\n\n    function saveProjectButtonClicked() {\n        // get project data from fields and file input\n        const project_data = {\n            \"name\": document.getElementById('text-field-name-input').value, \n            \"description\": document.getElementById('text-field-description-input').value\n        };\n\n        var images_data = new FormData();\n        for (const [image_id, file] of Object.entries(image_files_to_upload)) {\n            if (image_ids_to_upload.includes(image_id)) {\n                images_data.append(\"files\", file, file.name);\n            }\n        }\n\n        if (mode == \"add\") {\n            createProject(project_data, images_data);\n        } else if (mode == \"edit\") {\n            updateProject(project_id, project_data, images_data);\n        }\n        else {\n            console.log(\"Unknown mode. Must be either 'add' or 'edit'.\")\n        }\n    }\n\n    function cancelButtonClicked() {\n        redirectHome();\n    }    \n\n    function filesInputChanged(event) {\n        function createObjectURL(object) {\n            return (window.URL) ? window.URL.createObjectURL(object) : window.webkitURL.createObjectURL(object);\n        }\n        if(event.target.files.length) {\n            for(var i = 0; i < event.target.files.length; i++) {\n                const file = event.target.files[i];\n                const temp_id = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.uuidv4)();\n                image_files_to_upload[temp_id] = file;\n                image_ids_to_upload.push(temp_id);\n                var src = createObjectURL(file);\n                addImageToImageList(temp_id, false, `${src}`, \"image-not-uploaded\");\n            }\n            updateImageListTitle(true);\n        }\n    }\n\n    function deleteImageButtonClicked(image_id, is_uploaded) {\n        // unmarking an image for deletion\n        if (event.currentTarget.classList.contains(\"mdc-icon-button--on\")) {\n            event.currentTarget.classList.remove(\"mdc-icon-button--on\");\n            if (is_uploaded) {\n                // if image is already on the server, remove it from the list for active deletion\n                image_ids_to_delete = image_ids_to_delete.filter(function(e) { return e !== image_id });                \n            } else {\n                // else, add the tentative image back to the images_to_upload list\n                image_ids_to_upload.push(image_id);\n            }            \n        } \n        // marking an image for deletion\n        else {\n            event.currentTarget.classList.add(\"mdc-icon-button--on\");\n            if (is_uploaded) {\n                // if image is already on the server, mark it for activate deletion\n                image_ids_to_delete.push(image_id);\n            } else {\n                // remove image from images_to_upload list\n                image_ids_to_upload = image_ids_to_upload.filter(function(e) { return e !== image_id });\n            } \n        }        \n        console.log(\"image_ids_to_delete: \"+image_ids_to_delete);\n        console.log(\"image_ids_to_upload: \"+image_ids_to_upload);\n        console.log(\"image_files_to_upload: \"+image_files_to_upload);\n    }\n}\n\n\n\n//# sourceURL=webpack://frontend/./src/add_edit_project.js?");

/***/ }),

/***/ "./src/api.js":
/*!********************!*\
  !*** ./src/api.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"apiService\": () => (/* binding */ apiService)\n/* harmony export */ });\nvar fetchService = function() {\n\n    let makeFetchRequest = function(httpMethod, url, data=null, formData=null, authorization=true) {\n\n        const options = {\n            method: httpMethod\n        }\n\n        let headers = {};\n        if (authorization) {\n            headers['Authorization'] = 'Bearer ' + localStorage.getItem(\"access_token\")\n        }\n\n        if (data) {\n            options.body = JSON.stringify(data);\n            headers['Content-Type'] = 'application/json';\n        } \n        else if (formData) {\n            options.body = formData;\n        }\n\n        options.headers = new Headers(headers);\n\n        let responsePromise = fetch(url, options);\n\n        return responsePromise;\n    }\n\n    // public API\n    return {\n        makeFetchRequest: makeFetchRequest\n    }\n\n}();\n\n\nvar apiService = function() {\n\n    let apiUrl = API_URL;\n\n    let getProjects = function(skip, limit, orderby, orderdir) {\n        let url = `${apiUrl}/projects/?skip=${skip}&limit=${limit}&orderby=${orderby}&orderdir=${orderdir}`;\n        return fetchService.makeFetchRequest('GET', url, null, null, true);\n    }\n\n    let getProject = function(projectId) {\n        let url = `${apiUrl}/project/${projectId}`;\n        return fetchService.makeFetchRequest('GET', url, null, null, true);\n    }\n\n    let deleteProject = function(projectId) {\n        let url = `${apiUrl}/project/${projectId}`;\n        return fetchService.makeFetchRequest('DELETE', url, null, null, true);\n    }\n\n    let createProject = function(projectData) {\n        let url = `${apiUrl}/projects/`;\n        return fetchService.makeFetchRequest('POST', url, projectData, null, true);\n    }\n\n    let updateProject = function(projectId, projectData) {\n        let url = `${apiUrl}/project/${projectId}`\n        return fetchService.makeFetchRequest('PUT', url, projectData, null, true);\n    }\n\n    let getAnnotationIds = function() {\n        let url = `${apiUrl}/annotation_ids/`;\n        return fetchService.makeFetchRequest('GET', url, null, null, true);\n    }\n\n    let exportProject = function(projectId) {\n        let url = `${apiUrl}/export/${projectId}`;\n        return fetchService.makeFetchRequest('GET', url, null, null, true);\n    }\n\n    let importProject = function(importProjectData) {\n        let url = `${apiUrl}/import/`;\n        return fetchService.makeFetchRequest('POST', url, null, importProjectData, true);\n    }\n\n    let getImages = function(projectId) {\n        let url = `${apiUrl}/project/${projectId}/images/`;\n        return fetchService.makeFetchRequest('GET', url, null, null, true);\n    }\n\n    let getImageFile = function(imageId) {\n        let url = `${apiUrl}/image_file/${imageId}`;\n        return fetchService.makeFetchRequest('GET', url, null, null, true);\n    }\n\n    let createImages = function(projectId, imagesData) {\n        let url = `${apiUrl}/project/${projectId}/images/`;\n        return fetchService.makeFetchRequest('POST', url, null, imagesData, true);\n    }\n\n    let deleteImage = function(imageId) {\n        let url = `${apiUrl}/image/${imageId}`;\n        return fetchService.makeFetchRequest('DELETE', url, null, null, true);\n    }\n\n    let getAnnotation = function(imageId) {\n        let url = `${apiUrl}/annotation/${imageId}`;\n        return fetchService.makeFetchRequest('GET', url, null, null, true);\n    }\n\n    let updateAnnotation = function(imageId, annotationData) {\n        let url = `${apiUrl}/annotation/${imageId}`;\n        return fetchService.makeFetchRequest('PUT', url, annotationData, null, true);\n    }\n\n    let createUser = function(userData) {\n        let url = `${apiUrl}/users/`;\n        return fetchService.makeFetchRequest('POST', url, userData, null, false);\n    }\n\n    let loginUser = function(userData) {\n        let url = `${apiUrl}/token`;\n        return fetchService.makeFetchRequest('POST', url, null, userData, false);\n    }\n\n    let isValid = function(accessToken) {\n        let url = `${apiUrl}/isvalid/${accessToken}`;\n        return fetchService.makeFetchRequest('GET', url, null, null, false);\n    }\n\n    // public API\n    return {\n        getProjects: getProjects,\n        getProject: getProject,\n        deleteProject: deleteProject,\n        createProject: createProject,\n        updateProject: updateProject,\n        getAnnotationIds: getAnnotationIds,\n        exportProject: exportProject,\n        importProject: importProject,\n        getImages: getImages,\n        getImageFile: getImageFile,\n        createImages: createImages,\n        deleteImage: deleteImage,\n        getAnnotation: getAnnotation,\n        updateAnnotation: updateAnnotation,\n        createUser: createUser,\n        loginUser: loginUser,\n        isValid: isValid\n    }\n\n}();\n\n\n\n\n//# sourceURL=webpack://frontend/./src/api.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"entrypoint\": () => (/* binding */ entrypoint),\n/* harmony export */   \"exportProjectClicked\": () => (/* binding */ exportProjectClicked),\n/* harmony export */   \"getAnnotationIds\": () => (/* binding */ getAnnotationIds),\n/* harmony export */   \"getImageUrl\": () => (/* binding */ getImageUrl),\n/* harmony export */   \"htmlToElements\": () => (/* binding */ htmlToElements),\n/* harmony export */   \"parseValidationErrors\": () => (/* binding */ parseValidationErrors),\n/* harmony export */   \"redirectToLogin\": () => (/* binding */ redirectToLogin),\n/* harmony export */   \"redirectToProjects\": () => (/* binding */ redirectToProjects),\n/* harmony export */   \"setupProjectClicked\": () => (/* binding */ setupProjectClicked),\n/* harmony export */   \"userIsLoggedIn\": () => (/* binding */ userIsLoggedIn),\n/* harmony export */   \"uuidv4\": () => (/* binding */ uuidv4)\n/* harmony export */ });\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api.js */ \"./src/api.js\");\n\n\n\nasync function getAnnotationIds() { // async function getAnnotationIds() leads to weird error because it overwrites above definition\n    var response = await _api_js__WEBPACK_IMPORTED_MODULE_0__.apiService.getAnnotationIds();\n\n    if (response.status == 200) {\n        const existing_anotations = await response.json();\n        return existing_anotations;\n    } else if (response.status == 401) {\n        redirectToLogin();\n    } else {\n        throw new Error(`Failed to get annotation ids`);\n    }\n}\n\nasync function getImageUrl(image_id) {\n    var response = await _api_js__WEBPACK_IMPORTED_MODULE_0__.apiService.getImageFile(image_id);\n\n    if (response.status == 200) {\n        const imageBlob = await response.blob();\n        const imageURL = URL.createObjectURL(imageBlob);\n        return imageURL;\n    } else if (response.status == 401) {\n        redirectToLogin();\n    } else {\n        throw new Error(`Failed to get image file with id ${image_id}`);\n    }\n}\n\nasync function userIsLoggedIn() {\n    const access_token = localStorage.getItem('access_token');\n    if (!access_token) {\n        return false;\n    }\n\n    // check if access token is not expired yet\n    var response = await _api_js__WEBPACK_IMPORTED_MODULE_0__.apiService.isValid(access_token);\n    // check if access token is not expired yet\n    if (response.status == 200) {\n        const status = await response.json();\n        return status.isvalid;\n    } else {\n        throw new Error(\"Failed to determine whether user is logged in\");\n    }\n}\n\nasync function exportProjectClicked(project_id) {\n    var response = await _api_js__WEBPACK_IMPORTED_MODULE_0__.apiService.exportProject(project_id);\n\n    if (response.status == 200) {\n        // get filename\n        const disposition = response.headers.get('Content-Disposition');\n        var filename = disposition.split(/;(.+)/)[1].split(/=(.+)/)[1];\n        if (filename.toLowerCase().startsWith(\"utf-8''\")) {\n            filename = decodeURIComponent(filename.replace(\"utf-8''\", ''));\n        } else {\n            filename = filename.replace(/['\"]/g, '');\n        }\n        // get data\n        const fileBlob = await response.blob();\n        // download file\n        var a = document.createElement('a');\n        a.href = URL.createObjectURL(fileBlob);\n        a.download = filename;\n        document.body.appendChild(a); // append the element to the dom, otherwise it won't work in Firefox\n        a.click();\n        a.remove();\n    } else if (response.status == 401) {\n        redirectToLogin();\n    } else {\n        throw new Error(`Failed to export project with id ${project_id}`);\n    }\n}\n\nasync function setupProjectClicked(project_id) {\n    const url = FRONTEND_URLS.getEditProjectUrl+\"?project_id=\"+project_id;\n    const options = {\n        method: 'GET',\n        headers: new Headers({\n            'Authorization': 'Bearer ' + localStorage.getItem(\"access_token\")\n        })\n    }\n  \n    let response = await fetch(url, options);\n  \n    if (response.status == 200) {\n        const data = await response.json();\n        window.location.href = data.url;\n    } else if (response.status == 401) {\n        redirectToLogin();\n    } else {\n        throw new Error(`Failed to get url for setting up project with id ${project_id}`);\n    }\n}\n\nasync function entrypoint(entrypointFunc) {\n    const loggedIn = await userIsLoggedIn();\n    if (!loggedIn) {\n        redirectToLogin();\n    }\n    else {\n        entrypointFunc();\n    }\n}\n    \nfunction redirectToLogin() {\n    window.location.href = FRONTEND_URLS.login;\n}\n\nfunction redirectToProjects() {\n    window.location.href = FRONTEND_URLS.projects;\n}\n\n\n\n// UUID creation, taken from: https://stackoverflow.com/a/2117523\nfunction uuidv4() {\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n      (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\n\nfunction htmlToElements(html) {\n    var template = document.createElement('template');\n    template.innerHTML = html;\n    return template.content;\n}\n\nfunction parseValidationErrors(textFields, errors) {\n    errors[\"detail\"].forEach((error) => {\n        const fieldname = error.loc[1];\n        console.log(fieldname);\n        textFields[fieldname].helperTextContent = error.msg;\n        textFields[fieldname].valid = false;                \n    });\n}\n\n\n\n\n//# sourceURL=webpack://frontend/./src/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/add_edit_project.js");
/******/ 	
/******/ })()
;